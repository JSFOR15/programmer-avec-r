\chapter{GNU Emacs et ESS: la base}
\index{Emacs|(}
\label{ess}

Emacs est l'Éditeur de texte des éditeurs de texte. Bien que
d'abord et avant tout un éditeur pour programmeurs (avec des modes
spéciaux pour une multitude de langages différents), c'est également
un environnement idéal pour travailler sur des documents \LaTeX,
interagir avec \textsf{R}, S-Plus, SAS ou SQL, ou même pour lire son
courrier électronique.

L'auteur du présent ouvrage donne accès à une version simple à
installer et augmentée de quelques ajouts de la plus récente version
de GNU Emacs pour Windows.  Consulter le site Internet
\begin{quote}
  \url{http://vgoulet.act.ulaval.ca/emacs/}
\end{quote}

Cette annexe passe en revue les quelques commandes essentielles à
con\-naître pour commencer à travailler avec GNU Emacs et le mode ESS.
L'ouvrage de \cite{LearningEmacs} constitue une excellente référence
pour l'apprentissage plus poussé de l'éditeur.


\section{Mise en contexte}

Emacs est le logiciel étendard du projet GNU («\emph{GNU is not
  Unix}»), dont le principal commanditaire est la \emph{Free Software
  Foundation}.

\begin{itemize}
\item Distribué sous la GNU \emph{General Public License} (GPL),
  donc gratuit, ou «libre».
\item Le nom provient de «\emph{Editing MACroS}».
\item La première version de Emacs a été écrite par Richard M.\
  Stallman, président de la FSF.
\end{itemize}

\section{Configuration de l'éditeur}
\index{Emacs!configuration}

Une des grandes forces de Emacs est d'être configurable à l'envi.

\begin{itemize}
\item Depuis la version 21, le menu \texttt{Customize} rend la
  configuration aisée.
\item Une grande part de la configuration provient du fichier
  \texttt{.emacs}:
  \begin{itemize}
  \item nommé \texttt{.emacs} sous Linux et Unix, Windows 2000 et
    Windows XP;
  \item sous Windows 95/98/Me, utiliser plutôt \texttt{\_emacs}.
  \end{itemize}
\end{itemize}


\section{\emph{Emacs-ismes} et \emph{Unix-ismes}}

\begin{itemize}
\item Un \emph{buffer} contient un fichier ouvert («\emph{visited}»).
  Équivalent à une fenêtre dans Windows.
\item Le \emph{minibuffer} est la région au bas de l'écran Emacs où
  l'on entre des commandes et reçoit de l'information de Emacs.
\item La ligne de mode («\emph{mode line}») est le séparateur
  horizontal contenant diverses informations sur le fichier ouvert et
  l'état de Emacs.
\item Toutes les fonctionnalités de Emacs correspondent à une commande
  pouvant être tapée dans le \emph{minibuffer}.  \texttt{M-x} démarre
  l'invite de commande.
\item Dans les définitions de raccourcis claviers:
  \begin{itemize}
  \item \texttt{C} est la touche \texttt{Ctrl} (\texttt{Control});
  \item \texttt{M} est la touche \texttt{Meta}, qui correspond à la
    touche \texttt{Alt} de gauche sur un PC;
  \item \texttt{ESC} est la touche \texttt{Échap} (\texttt{Esc}) et
    est équivalente à \texttt{Meta};
  \item \texttt{SPC} est la barre d'espacement;
  \item \texttt{RET} est la touche Entrée.
  \end{itemize}
\item Le caractère \verb=~= représente le dossier vers lequel pointe
  la variable d'environnement \texttt{\$HOME} (Unix) ou
  \texttt{\%HOME\%} (Windows).
\item La barre oblique (\texttt{/}) est utilisée pour séparer les
  dossiers dans les chemins d'accès aux fichiers, même sous Windows.
\item En général, il est possible d'appuyer sur \texttt{TAB} dans le
  \emph{minibuffer} pour compléter les noms de fichiers ou de
  commandes.
\end{itemize}


\section{Commandes d'édition de base}

Il n'est pas vain de lire le tutoriel de Emacs, que l'on démarre avec
\begin{quote}
  \texttt{C-h t}
\end{quote}

Pour une liste plus exhaustive des commandes Emacs les plus
importantes, consulter la \emph{GNU Emacs Reference Card} à l'adresse
\begin{quote}
  \url{http://refcards.com/refcards/gnu-emacs/}
\end{quote}

\enlargethispage{5mm}
\begin{itemize}
\item Pour créer un nouveau fichier, ouvrir un fichier n'existant
  pas.\index{Emacs!nouveau fichier}
\item Principaux raccourcis clavier d'édition avec, entre parenthèses,
  le nom de la commande Emacs correspondante:
  \begin{ttscript}{C-x C-w}
    \raggedright
  \item[\emacs{C-x C-f}] ouvrir un fichier (\texttt{find-file})
  \item[\emacs{C-x C-s}] sauvegarder
    (\texttt{save-buffer})\index{Emacs!sauvegarder}
  \item[\emacs{C-x C-w}] sauvegarder sous
    (\texttt{write-file})\index{Emacs!sauvegarder sous}
  \item[\emacs{C-x k}] fermer un fichier (\texttt{kill-buffer})
  \item[\emacs{C-x C-c}] quitter Emacs
    (\texttt{save-buffers-kill-emacs})
    \\[\baselineskip]
  \item[\emacs{C-g}] bouton de panique: quitter!
    (\texttt{keyboard-quit})
  \item[\emacs{C-\_}] annuler (pratiquement illimité); aussi
    \emacs{C-x u} (\texttt{undo})
    \\[\baselineskip]
  \item[\emacs{C-s}] recherche incrémentale avant
    (\texttt{isearch-forward})
  \item[\emacs{C-r}] Recherche incrémentale arrière
    (\texttt{isearch-backward})
  \item[\emacs{M-\%}] rechercher et remplacer
    (\texttt{query-replace})\index{Emacs!rechercher et remplacer}
    \\[\baselineskip]
  \item[\emacs{C-x b}] changer de \emph{buffer}
    (\texttt{switch-buffer})
  \item[\emacs{C-x 2}] séparer l'écran en deux fenêtres
    (\texttt{split-window-vertically})
  \item[\emacs{C-x 1}] conserver uniquement la fenêtre courante
    (\texttt{delete-other-windows})
  \item[\emacs{C-x 0}] fermer la fenêtre courante
    (\texttt{delete-window})
  \item[\emacs{C-x o}] aller vers une autre fenêtre lorsqu'il y en a
    plus d'une (\texttt{other-window})
  \end{ttscript}
\end{itemize}


\section{Sélection de texte}
\index{Emacs!sélection}
\label{ess:selection}

La sélection de texte fonctionne différemment du standard Windows.

\begin{itemize}
\item Les raccourcis clavier standards sous Emacs sont:
  \begin{ttscript}{C-SPC}
    \raggedright
  \item[\emacs{C-SPC}] débute la sélection (\texttt{set-mark-command})
  \item[\emacs{C-w}] couper la sélection (\texttt{kill-region})
  \item[\emacs{M-w}] copier la sélection (\texttt{kill-ring-save})
  \item[\emacs{C-y}] coller (\texttt{yank})
  \item[\emacs{M-y}] remplacer le dernier texte collé par la
    sélection précédente (\texttt{yank-pop})
  \end{ttscript}
\item Il existe quelques extensions de Emacs permettant d'utiliser les
  raccourcis clavier usuels de Windows (\texttt{C-c}, \texttt{C-x},
  \texttt{C-v}); voir
  \url{http://www.emacswiki.org/cgi-bin/wiki/CuaMode}.
\end{itemize}
\index{Emacs|)}

\section{Mode ESS}
\index{ESS|(}

Le mode ESS (\emph{Emacs Speaks Statistics}) permet d'interagir avec
des logiciels statistiques (S-Plus, \textsf{R}, SAS, etc.) depuis
Emacs. Ce mode est installé dans la version modifiée de GNU Emacs pour
Windows distribuée dans le site Internet
\url{http://vgoulet.act.ulaval.ca/emacs/}, ainsi que dans Aquamacs
pour Mac OS~X (\url{http://aquamacs.org}).

\begin{itemize}
\item La documentation complète est disponible dans le site Internet
  du projet ESS:
  \begin{quote}
    \url{http://ess.r-project.org/}
  \end{quote}
\item Deux modes mineurs: \texttt{iESS} pour l'invite de commande et
  \texttt{ESS} pour les fichiers de script (code source).
\end{itemize}


\subsection{Interaction avec l'invite de commande}
\label{ess:invite}

Pour démarrer un processus S et activer le mode mineur \texttt{iESS},
entrer l'une des commandes \texttt{S}, \texttt{Sqpe} ou \texttt{R}
dans l'invite de commande de Emacs (voir aussi l'annexe
\ref{s-plus_windows}).

\begin{itemize}
\item Par exemple, pour démarrer un processus \textsf{R} à l'intérieur
  même de Emacs, on fera
  \begin{quote}
    \ttfamily M-x R RET
  \end{quote}
\item Raccourcis clavier les plus utiles à la ligne de commande (mode
  \texttt{iESS}):
  \begin{ttscript}{C-c C-c}
    \raggedright
  \item[\ess{M-p}, \ess{M-n}] navigation dans l'historique des
    commandes (\texttt{previous-matching-history-from-input},
    \texttt{next-matching-history-from-input})
  \item[\ess{C-c C-e}] replacer la dernière ligne au bas de la fenêtre
    (\texttt{comint-show-maximum-output})
  \item[\ess{M-h}] sélectionner le résultat de la dernière commande
    (\texttt{mark-paragraph})
  \item[\ess{C-c C-o}] effacer le résultat de la dernière commande
    (\texttt{comint-delete-output})
  \item[\ess{C-c C-v}] aide sur une commande S
    (\texttt{ess-display-help-on-object})
  \item[\ess{C-c C-q}] terminer le processus S (\texttt{ess-quit})
  \end{ttscript}
\end{itemize}


\subsection{Manipulation des fichiers de script}
\label{ess:script}

Une fois ESS installé, le mode mineur \texttt{ESS} s'active
automatiquement en éditant des fichiers avec l'extension \texttt{.S}
ou \texttt{.R}.

\begin{itemize}
\item Raccourcis clavier les plus utiles lors de l'édition d'un
  fichier de script (mode \texttt{ESS}):
  \begin{ttscript}{C-c C-c}
    \raggedright
  \item[\ess{C-c C-n}] évaluer la ligne sous le curseur dans le
    processus S, puis déplacer le curseur à la prochaine ligne de
    commande (\texttt{ess-eval-line-and-step})
  \item[\ess{C-c C-j}] évaluer la ligne sous le curseur dans le
    processus S sans déplacer le curseur (\texttt{ess-eval-line})
  \item[\ess{C-c C-r}] évaluer la région sélectionnée dans le
    processus S (\texttt{ess-eval-region})
  \item[\ess{C-c C-f}] évaluer le code de la fonction courante dans
    le processus S (\texttt{ess-eval-function})
  \item[\ess{C-c C-l}] évaluer le code du fichier courant dans le
    processus S (\texttt{ess-load-file})
  \item[\ess{C-c C-v}] aide sur une commande S
    (\texttt{ess-display-help-on-object})
  \item[\ess{C-c C-s}] changer de processus (utile si l'on a plus
    d'un processus S actif)
  \end{ttscript}
\end{itemize}


\subsection{Consultation des rubriques d'aide}
\label{ess:aide}

Il y a quelques avantages à consulter les rubriques d'aide de
\textsf{R} ou S-Plus à l'intérieur même de Emacs plutôt que dans
l'interface d'aide de Windows ou Mac OS.

\begin{itemize}
\item Afin \R de s'assurer que les rubriques d'aide de \textsf{R}
  seront affichées dans Emacs, modifier l'option \code{chmhelp} ainsi:
<<echo=TRUE, eval=FALSE>>=
options(chmhelp = FALSE)
@
  Pour que cette commande s'exécute automatiquement à chaque lancement
  de \textsf{R}, entrer la commande dans un fichier nommé
  \code{.Rprofile} sauvegardé dans le dossier mentionné dans le
  résultat de la commande
<<echo=TRUE, eval=FALSE>>=
Sys.getenv("R_USER")
@

  Pour plus de détails sur les options de démarrage, consulter la
  rubrique d'aide de \fonction{Startup}.
\item Raccourcis clavier utiles lors de la consultation des rubriques
  d'aide:
  \begin{ttscript}{m, m}
    \raggedright
  \item[\ess{h}] ouvrir une nouvelle rubrique d'aide, par défaut pour le mot
    se trouvant sous le curseur (\texttt{ess-display-help-on-object})
  \item[\ess{n}, \ess{p}] aller à la section suivante (\texttt{n}) ou
    précédente (\texttt{p}) de la rubrique
    (\texttt{ess-skip-to-next-section},
    \texttt{ess-skip-to-previous-section})
  \item[\ess{l}] évaluer la ligne sous le curseur; pratique pour
    exécuter les exemples (\texttt{ess-eval-line-and-step})
  \item[\ess{r}] évaluer la région sélectionnée
    (\texttt{ess-eval-region})
  \item[\ess{q}] retourner au processus ESS en laissant la rubrique
    d'aide visible (\texttt{ess-switch-to-end-of-ESS})
  \item[\ess{x}] fermer la rubrique d'aide et retourner au processus
    ESS (\texttt{ess-kill-buffer-and-go})
  \end{ttscript}
\end{itemize}
\index{ESS|)}


\section{Session de travail type}
\label{ess:session_travail}

On décrit, dans cette section, les différentes étapes et principaux
raccourcis clavier d'une session de travail type avec S-Plus ou
\textsf{R}, Emacs et ESS.

\begin{enumerate}
\item Déterminer le dossier de travail et le créer au besoin.
  Normalement, le dossier de travail pour S-Plus ou \textsf{R} sera le
  même que celui où les fichiers de script sont sauvegardés. Si l'on
  prévoit sauvegarder des objets S, il est important de choisir un
  nouveau dossier pour le projet.
\item Lancer Emacs et démarrer un processus S dans le dossier de
  travail déterminé ci-dessus.
  \begin{itemize}
  \item \code{M-x R RET} ou \code{M-x Sqpe RET}
  \end{itemize}
\item Ouvrir un fichier de script dans lequel on sauvegardera le code
  source.
  \begin{itemize}
  \item \emacs{C-x C-f} pour ouvrir un fichier existant ou un nouveau
    fichier.
  \end{itemize}
\item Composer le code. Lors de cette étape, on se déplacera souvent
  du fichier de script à la ligne de commande afin d'essayer diverses
  expressions. On exécutera également des parties seulement du code se
  trouvant dans le fichier de script.
  \begin{itemize}
  \item \emacs{C-x o} pour se déplacer de la fenêtre de script à la
    ligne de commande et vice-versa.
  \item \ess{C-c C-e} pour replacer le curseur à la ligne de commande
    et au bas de la fenêtre.
  \item \ess{C-c C-o} pour effacer le résultat de la dernière
    commande, surtout s'il est très long.
  \item \ess{C-c C-n} pour exécuter une ligne du fichier de script.
  \item \ess{C-c C-r} pour exécuter une région du fichier de script
    (voir la section \ref{ess:selection} pour sélectionner une région).
  \item \ess{C-c C-f} pour définir une fonction.
  \end{itemize}
\item Sauvegarder le fichier de script. Les quatrième et cinquième
  caractères de la ligne de mode changent de \verb|**| à \verb|--|.
  \begin{itemize}
  \item \emacs{C-x C-s} pour sauvegarder le fichier de script.
  \end{itemize}
\item Il est également possible de sauvegarder le texte de la session
  interactive (la ligne de commande). Il est recommandé de nommer de
  telles transcriptions de la session de travail avec une extension
  \texttt{.St} ou \texttt{.Rt}. En effet, ESS possède un mode spécial
  pour les transcriptions. Consulter à cet effet le chapitre 5 de la
  documentation de ESS.
  \begin{itemize}
  \item \emacs{C-x C-s} pour sauvegarder le texte de la session.
  \end{itemize}
\item Quitter le processus S. Utiliser la commande ESS pour ce faire
  puisque ESS se chargera de fermer tous les fichiers associés au
  processus S. À moins qu'il ne contienne des objets importants,
  l'espace de travail \R en \textsf{R} n'est habituellement pas
  sauvegardé.
  \begin{itemize}
  \item \ess{C-c C-q} pour quitter le processus S.
  \end{itemize}
\end{enumerate}


%%% Local Variables:
%%% mode: latex
%%% TeX-master: "introduction_programmation_S"
%%% coding: utf-8
%%% End:
