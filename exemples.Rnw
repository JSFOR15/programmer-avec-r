\chapter{Exemples résolus}
\label{exemples}

<<echo=FALSE>>=
options(width = 50)
@

\SweaveOpts{keep.source = TRUE}

\begin{objectifs}
\item Mettre en pratique les connaissances acquises dans les chapitres
  précédents.
\item Savoir tirer profit de l’arithmétique vectorielle de R pour
  effectuer des calculs complexes sans boucles.
\item Utiliser l’initialisation de vecteurs et leur indiçage de
  manière à réduire le temps de calcul.
\end{objectifs}

Ce chapitre propose de faire le point sur les concepts étudiés jusqu'à
maintenant par le biais de quelques exemples résolus. On y met
particulièrement en évidence les avantages de l'approche vectorielle
du langage R.

La compréhension du contexte de ces exemples requiert quelques
connaissances de base en mathématiques financières et en théorie des
probabilités.


\section{Calcul de valeurs présentes}
\index{valeur présente}
\label{exemples:vp}

De manière générale, la valeur présente d'une série de paiements $P_1,
P_2, \dots, P_n$ à la fin des années $1, 2, \dots, n$ est
\begin{equation}
  \label{eq:vp}
  \sum_{j = 1}^n \prod_{k = 1}^j (1 + i_k)^{-1} P_j,
\end{equation}
où $i_k$ est le taux d'intérêt effectif annuellement durant l'année
$k$. Lorsque le taux d'intérêt est constant au cours des $n$ années,
cette formule se simplifie en
\begin{equation}
  \label{eq:vp2}
  \sum_{j = 1}^n (1 + i)^{-j} P_j.
\end{equation}

Un prêt est remboursé par une série de cinq paiements, le premier
étant dû dans un an. On doit trouver le montant du prêt pour chacune
des hypothèses ci-dessous.
\begin{enumerate}[a)]
\item Paiement annuel de \nombre{1000}, taux d'intérêt de 6~\% effectif
  annuellement.

  Avec un paiement annuel et un taux d'intérêt constants, on utilise
  la formule \eqref{eq:vp2} avec $P_j = P = \nombre{1000}$:
<<1(a)>>=
1000 * sum((1 + 0.06)^(-(1:5)))
@ %
  Remarquer comme l'expression R se lit exactement comme la formule
  mathématique.
\item Paiements annuels de 500, 800, 900, 750 et \nombre{1000}, taux
  d'intérêt de 6~\% effectif annuellement.

  Les paiements annuels sont différents, mais le taux d'intérêt est
  toujours le même. La formule \eqref{eq:vp2} s'applique donc directement:
<<1(b)>>=
sum(c(500, 800, 900, 750, 1000) * (1 + 0.06)^(-(1:5)))
@

\item Paiements annuels de 500, 800, 900, 750 et \nombre{1000}, taux
  d'intérêt de 5~\%, 6~\%, 5,5~\%, 6,5~\% et 7~\% effectifs
  annuellement.

  Avec différents paiements annuels et des taux d'intérêt différents,
  il faut employer la formule \eqref{eq:vp}. Le produit cumulatif des
  taux d'intérêt est obtenu avec la fonction \fonction{cumprod}:
<<1(c)>>=
sum(c(500, 800, 900, 750, 1000) /
    cumprod(1 + c(0.05, 0.06, 0.055, 0.065, 0.07)))
@
\end{enumerate}


\section{Fonctions de masse de probabilité}
\label{exemples:fp}

On doit calculer toutes ou la majeure partie des probabilités de deux
lois de probabilité, puis vérifier que la somme des probabilités est
bien égale à 1.

Cet exemple est quelque peu artificiel dans la mesure où il existe
dans R des fonctions internes pour calculer les principales
caractéristiques des lois de probabilité les plus usuelles. Nous
utiliserons d'ailleurs ces fonctions pour vérifier nos calculs.

\begin{enumerate}[a)]
\item Calculer toutes les masses de probabilité de la distribution
  binomiale\index{distribution!binomiale} pour des valeurs des
  paramètres $n$ et $p$ quelconques. La fonction de masse de
  probabilité de la binomiale est
  \begin{equation*}
    f(x) = \binom{n}{x} p^x (1 - p)^{n - x}, \quad x = 0, \dots, n.
  \end{equation*}

  Soit $n = 10$ et $p = 0,8$. Les coefficients binomiaux sont calculés
  avec la fonction \fonction{choose}: \indexfonction{rev}
<<2(a)>>=
n <- 10
p <- 0.8
x <- 0:n
choose(n, x) * p^x * (1 - p)^rev(x)
@
    On vérifie les réponses obtenues avec la fonction interne
    \fonction{dbinom}:
<<2(b)-2>>=
dbinom(x, n, prob = 0.8)
@
    On vérifie enfin que les probabilités somment à 1:
<<2(b)-3>>=
sum(choose(n, x) * p^x * (1 - p)^rev(x))
@

\item Calculer la majeure partie des masses de probabilité de la
  distribution de Poisson\index{distribution!Poisson}, dont la
  fonction de masse de probabilité est
  \begin{equation*}
    f(x) = \frac{\lambda^x e^{-\lambda}}{x!}, \quad x = 0, 1, \dots,
  \end{equation*}
  où $x! = x(x - 1) \cdots 2 \cdot 1$.

  La loi de Poisson ayant un support infini, on calcule les
  probabilités en $x = 0, 1, \dots, 10$ seulement avec $\lambda = 5$.
  On calcule les factorielles avec la fonction \Fonction{factorial}.
  On notera au passage que \code{factorial(x) == gamma(x + 1)}, où la
  fonction R \Fonction{gamma} calcule les valeurs de la fonction
  mathématique du même nom
  \begin{equation*}
    \Gamma(n) = \int_0^\infty x^{n - 1} e^{-x}\, dx
    = (n - 1) \Gamma(n - 1),
  \end{equation*}
  avec $\Gamma(0) = 1$. Pour $n$ entier, on a donc $\Gamma(n) = (n -
  1)!$. \indexfonction{exp}
<<2(b)>>=
lambda <- 5
x <- 0:10
exp(-lambda) * (lambda^x / factorial(x))
@
  Vérification avec la fonction interne \fonction{dpois}:
<<2(b)-2>>=
dpois(x, lambda)
@
  Pour vérifier que les probabilités somment à 1, il faudra d'abord
  tronquer le support infini de la Poisson à une «grande» valeur.
  Ici, $200$ est suffisamment éloigné de la moyenne de la
  distribution, $5$. Remarquer que le produit par $e^{-\lambda}$
  est placé à l'extérieur de la somme pour ainsi faire un seul
  produit plutôt que $201$.
<<2(b)-3>>=
x <- 0:200
exp(-lambda) * sum((lambda^x / factorial(x)))
@
\end{enumerate}


\section{Fonction de répartition de la loi gamma}
\label{exemples:gamma}

La loi gamma\index{distribution!gamma} est fréquemment utilisée pour
la modélisation d'événements ne pouvant prendre que des valeurs
positives et pour lesquels les petites valeurs sont plus fréquentes
que les grandes. Par exemple, on utilise parfois la loi gamma en
sciences actuarielles pour la modélisation des montants de sinistres.
Nous utiliserons la paramétrisation où la fonction de densité de
probabilité est
\begin{equation}
  \label{eq:exemples:gamma:fdp}
  f(x) = \frac{\lambda^\alpha}{\Gamma(\alpha)}\, x^{\alpha-1}
  e^{-\lambda x}, \quad x > 0,
\end{equation}
où $\Gamma(\cdot)$ est la fonction gamma définie dans l'exemple
précédent.

Il n'existe pas de formule explicite de la fonction de répartition de
la loi gamma. Néanmoins, la valeur de la fonction de répartition d'une
loi gamma de paramètre $\alpha$ entier et $\lambda = 1$ peut être
obtenue à partir de la formule
\begin{equation}
  \label{eq:exemples:gamma:fr}
  F(x; \alpha, 1) = 1 - e^{-x} \sum_{j = 0}^{\alpha-1} \frac{x^j}{j!}.
\end{equation}

\begin{enumerate}[a)]
\item Évaluer $F(4; 5, 1)$.

  Cet exercice est simple puisqu'il s'agit de calculer une seule
  valeur de la fonction de répartition avec un paramètre $\alpha$
  fixe. Par une application directe de \eqref{eq:exemples:gamma:fr},
  on a: \indexfonction{exp}
<<3(a)>>=
alpha <- 5
x <- 4
1 - exp(-x) * sum(x^(0:(alpha - 1))/gamma(1:alpha))
@
    Vérification avec la fonction interne \fonction{pgamma}:
<<3(a)-2>>=
pgamma(x, alpha)
@
    On peut aussi éviter de générer essentiellement la même suite de
    nombres à deux reprises en ayant recours à une variable
    intermédiaire. Au risque de rendre le code un peu moins lisible (mais
    plus compact!), l'affectation et le calcul final peuvent même se faire
    dans une seule expression.
<<3(a)-3>>=
1 - exp(-x) * sum(x^(-1 + (j <- 1:alpha))/gamma(j))
@

\item Évaluer $F(x; 5, 1)$ pour $x = 2, 3, \dots, 10$ en une seule
  expression.

  Cet exercice est beaucoup plus compliqué qu'il n'y paraît au
  premier abord. Ici, la valeur de $\alpha$ demeure fixe, mais on doit
  calculer, en une seule expression, la valeur de la fonction de
  répartition en plusieurs points. Or, cela exige de faire d'un coup
  le calcul $x^j$ pour plusieurs valeur de $x$ et plusieurs valeurs de
  $j$. C'est un travail pour la fonction \fonction{outer}:
<<3(b)>>=
x <- 2:10
1 - exp(-x) * colSums(t(outer(x, 0:(alpha-1), "^")) /
                      gamma(1:alpha))
@
    Vérification avec la fonction interne \fonction{pgamma}:
<<3(a)-2>>=
pgamma(x, alpha)
@ %
  \indexfonction{colSums} %
  Il est laissé en exercice de déterminer pourquoi la transposée est
  nécessaire dans l'expression ci-dessus. Exécuter l'expression étape
  par étape, de l'intérieur vers l'extérieur, pour mieux comprendre
  comment on arrive à faire le calcul en \eqref{eq:exemples:gamma:fr}.
\end{enumerate}


\section{Algorithme du point fixe}
\index{point fixe}
\label{exemples:pointfixe}

Trouver la racine d'une fonction $g$ --- c'est-à-dire le point $x$ où
$g(x) = 0$ --- est un problème classique en mathématiques. Très
souvent, il est possible de reformuler le problème de façon à plutôt
chercher le point $x$ où $f(x) = x$. La solution d'un tel problème est
appelée \emph{point fixe}.

L'algorithme du calcul numérique du point fixe d'une fonction $f(x)$
est très simple:
\begin{enumerate}
\item choisir une valeur de départ $x_0$;
\item calculer $x_n = f(x_{n-1})$ pour $n = 1, 2, \dots$;
\item répéter l'étape 2 jusqu'à ce que $|x_n - x_{n-1}| < \epsilon$ ou
  $|x_n - x_{n-1}|/|{x_{n-1}}| < \epsilon$.
\end{enumerate}

On doit trouver, à l'aide de la méthode du point fixe, la valeur de
$i$ telle que
\begin{equation*}
  a_{\angl{10}} = \frac{1 - (1 + i)^{-10}}{i} = 8,21,
\end{equation*}
c'est à dire le taux de rendement d'une série de 10 versements de 1
pour laquelle on a payé un montant de 8,21.

Puisque, d'une part, nous ignorons combien de fois la procédure
itérative devra être répétée et que, d'autre part, il faut exécuter la
procédure au moins une fois, le choix logique pour la structure de
contrôle à utiliser dans cette procédure itérative est
\fonction{repeat}. De plus, il faut comparer deux valeurs successives
du taux d'intérêt, nous devrons donc avoir recours à deux variables.
On a:
<<4>>=
i <- 0.05
repeat
{
    it <- i
    i <- (1 - (1 + it)^(-10))/8.21
    if (abs(i - it)/it < 1E-10)
        break
}
i
@
  Vérification:
<<4-2>>=
(1 - (1 + i)^(-10))/i
@ %
Nous verrons au chapitre \ref{fonctions} comment créer une fonction à
partir de ce code.


\section{Suite de Fibonacci}
\label{exemples:fibonacci}

La suite de Fibonacci est une suite de nombres entiers très connue.
Les deux premiers termes de la suite sont $0$ et $1$ et tous les
autres sont la somme des deux termes précédents. Mathématiquement, les
valeurs de la suite de Fibonacci sont données par la fonction
\begin{align*}
  f(0) &= 0 \\
  f(1) &= 1 \\
  f(n) & = f(n - 1) + f(n - 2), \quad n \geq 2.
\end{align*}
Le quotient de deux termes successifs converge vers $(1 +
\sqrt{5})/2$, le nombre d'or.

On veut calculer les $n > 2$ premiers termes de la suite de Fibonacci.
Ce problème étant intrinsèquement récursif, nous devons utiliser une
boucle.

Voici une première solution pour $n = 10$:
<<5-a>>=
n <- 10
x <- c(0, 1)
for (i in 3:n) x[i] <- x[i - 1] + x[i - 2]
x
@

La procédure ci-dessus a un gros défaut: la taille de l'objet \code{x}
est constamment augmentée pour stocker une nouvelle valeur de la
suite. Tentons une analogie alimentaire pour cette manière de
procéder. Pour ranger des biscuits frais sortis du four, on prend un
premier biscuit et on le range dans un plat ne pouvant contenir qu'un
seul biscuit. Arrivé au second biscuit, on constate que le contenant
n'est pas assez grand, alors on sort un plat pouvant contenir deux
biscuits, on change le premier biscuit de plat et on y range aussi le
second biscuit. Arrivé au troisième biscuit, le petit manège
recommence, et ainsi de suite jusqu'à ce que le plateau de biscuit
soit épuisé.

C'est exactement ce qui se passe dans la mémoire de l'ordinateur avec
la procédure ci-dessus, l'odeur des bons biscuits chauds en moins. En
effet, le système doit constamment allouer de la nouvelle mémoire et
déplacer les termes déjà sauvegardés au fur et à mesure que le vecteur
\code{x} grandit. On aura compris qu'une telle façon de faire est à
éviter absolument lorsque c'est possible --- et ça l'est la plupart du
temps.

Quand on sait quelle sera la longueur d'un objet, comme c'est le cas
dans cet exemple, il vaut mieux créer un contenant vide de la bonne
longueur et le remplir par la suite. Cela nous donne une autre façon
de calculer la suite de Fibonacci:
<<5-b>>=
n <- 10
x <- numeric(n)      # contenant créé
x[2] <- 1            # x[1] vaut déjà 0
for (i in 3:n) x[i] <- x[i - 1] + x[i - 2]
x
@

Dans les exemples du chapitre~\ref{fonctions}, nous composeront des
fonctions avec ces deux exemples et nous comparerons les temps de
calcul pour $n$ grand.



\section{Exercices}
\label{exemples:exercices}

\Opensolutionfile{reponses}[reponses-exemples]

\begin{Filesave}{reponses}
\section*{Chapitre \ref{exemples}}
\addcontentsline{toc}{section}{Chapitre \protect\ref{exemples}}

\end{Filesave}

Dans chacun des exercices ci-dessous, écrire une expression R pour
faire le calcul demandé. Parce qu'elles ne sont pas nécessaires, il
est interdit d'utiliser des boucles\index{boucle}.

\begin{exercice}
  \index{valeur présente}
  Calculer la valeur présente d'une série de paiements fournie dans un
  vecteur \code{P} en utilisant les taux d'intérêt annuels d'un
  vecteur \code{i}.
  \begin{rep}
<<echo=TRUE,eval=FALSE>>=
sum(P / cumprod(1 + i))
@
  \end{rep}
\end{exercice}

\begin{exercice}
  \index{moyenne!pondérée}
  \label{exercice:exemples:moyennes}
  Étant donné un vecteur d'observations $\mat{x} = (x_1, \dots, x_n)$
  et un vecteur de poids correspondants $\mat{w} = (w_1, \dots, w_n)$,
  calculer la moyenne pondérée des observations,
  \begin{equation*}
    \sum_{i = 1}^n \frac{w_i}{w_\pt} x_i,
  \end{equation*}
  où $w_\pt = \sum_{i = 1}^n w_i$. Tester l'expression avec les vecteurs
  de données
  \begin{align*}
    \mat{x}
    &= (7, 13, 3, 8, 12, 12, 20, 11) \\
    \intertext{et} \mat{w}
    &= (0,15,\; 0,04,\; 0,05,\; 0,06,\; 0,17,\; 0,16,\; 0,11,\; 0,09).
  \end{align*}
  \begin{rep}
<<echo=TRUE,eval=FALSE>>=
x <- c(7, 13, 3, 8, 12, 12, 20, 11)
w <- c(0.15, 0.04, 0.05, 0.06, 0.17, 0.16, 0.11, 0.09)
sum(x * w)/sum(w)
@
  \end{rep}
\end{exercice}

\begin{exercice}
  \index{moyenne!harmonique}
  Soit un vecteur d'observations $\mat{x} = (x_1, \dots, x_n)$.
  Calculer la moyenne harmonique de ce vecteur, définie comme
  \begin{equation*}
    \frac{n}{\D \frac{1}{x_1} + \dots + \frac{1}{x_n}}.
  \end{equation*}
  Tester l'expression avec les valeurs de l'exercice
  \ref{exemples}.\ref{exercice:exemples:moyennes}.
  \begin{rep}
<<echo=TRUE,eval=FALSE>>=
1/mean(1/x)
@
  \end{rep}
\end{exercice}

\begin{exercice}
  \index{distribution!Poisson}
  Calculer la fonction de répartition en $x = 5$ d'une loi de
  Poisson avec paramètre $\lambda = 2$, qui est donnée par
  \begin{equation*}
    \sum_{k = 0}^5 \frac{2^k e^{-2}}{k!},
  \end{equation*}
  où $k! = 1 \cdot 2 \cdots k$.
  \begin{rep}
<<echo=TRUE,eval=FALSE>>=
lambda <- 2
x <- 5
exp(-lambda) * sum(lambda^(0:x)/gamma(1 + 0:x))
@
  \end{rep}
\end{exercice}

\begin{exercice}
  \begin{enumerate}
  \item Calculer l'espérance d'une variable aléatoire $X$ dont le
    support est $x = 1, 10, 100, ..., \nombre{1000000}$ et les
    probabilités correspondantes sont $\frac{1}{28}, \frac{2}{28},
    ..., \frac{7}{28}$, dans l'ordre.
  \item Calculer la variance de la variable aléatoire $X$ définie en
    a).
  \end{enumerate}
  \begin{rep}
    \begin{enumerate}
\item
<<echo=TRUE,eval=FALSE>>=
x <- 10^(0:6)
probs <- (1:7)/28
@
\item
<<echo=TRUE,eval=FALSE>>=
sum(x^2 * probs) - (sum(x * probs))^2
@
    \end{enumerate}
  \end{rep}
\end{exercice}

\begin{exercice}
  Calculer le taux d'intérêt nominal composé quatre fois par année,
  $i^{(4)}$, équivalent à un taux de $i = 6~\%$ effectif annuellement.
  \begin{rep}
<<echo=TRUE,eval=FALSE>>=
i <- 0.06
4 * ((1 + i)^0.25 - 1)
@
  \end{rep}
\end{exercice}

\begin{exercice}
  \index{valeur présente}
  La valeur présente d'une série de $n$ paiements de fin d'année à un
  taux d'intérêt $i$ effectif annuellement est
  \begin{equation*}
    a_\angln
    = v + v^2 + \dots + v^n
    = \frac{1 - v^n}{i},
  \end{equation*}
  où $v = (1 + i)^{-1}$. Calculer en une seule expression, toujours
  sans boucle, un tableau des valeurs présentes de séries de $n = 1,
  2, \dots, 10$ paiements à chacun des taux d'intérêt effectifs
  annuellement $i = 0,05, 0,06, \dots, 0,10$.
  \begin{rep}
<<echo=TRUE,eval=FALSE>>=
n <- 1:10
i <- seq(0.05, 0.1, by = 0.01)
(1 - outer((1 + i), -n, "^"))/i
@
ou
<<echo=TRUE,eval=FALSE>>=
n <- 1:10
i <- (5:10)/100
apply(outer(1/(1+i), n, "^"), 1, cumsum)
@
  \end{rep}
\end{exercice}

\begin{exercice}
  \index{valeur présente}
  Calculer la valeur présente d'une annuité croissante de 1~\$ payable
  annuellement en début d'année pendant 10 ans si le taux
  d'actualisation est de 6~\%. Cette valeur présente est donnée par
  \begin{equation*}
    I\ddot{a}_{\angl{10}} = \sum_{k = 1}^{10}kv^{k-1},
  \end{equation*}
  toujours avec $v = (1 + i)^{-1}$.
  \begin{rep}
<<echo=TRUE,eval=FALSE>>=
v <- 1/1.06
k <- 1:10
sum(k * v^(k - 1))
@
  \end{rep}
\end{exercice}

\begin{exercice}
  \index{valeur présente}
  \label{exercice:exemples:serie}
  Calculer la valeur présente de la séquence de paiements 1, 2, 2, 3,
  3, 3, 4, 4, 4, 4 si les paiements sont effectués en fin d'année et
  que le taux d'actualisation est de 7~\%.
  \begin{rep}
<<echo=TRUE,eval=FALSE>>=
pmts <- rep(1:4, 1:4)
v <- 1/1.07
k <- 1:10
sum(pmts * v^k)
@
  \end{rep}
\end{exercice}

\begin{exercice}
  \index{valeur présente} Calculer la valeur présente de la séquence
  de paiements définie à l'exercice
  \ref{exemples}.\ref{exercice:exemples:serie} en supposant que le
  taux d'intérêt d'actualisation alterne successivement entre 5~\% et
  8~\% chaque année, c'est-à-dire que le taux d'intérêt est de 5~\%,
  8~\%, 5~\%, 8~\%, etc.
  \begin{rep}
<<echo=TRUE,eval=FALSE>>=
v <- cumprod(1/(1 + rep(c(0.05, 0.08), 5)))
pmts <- rep(1:4, 1:4)
sum(pmts * v)
@
  \end{rep}
\end{exercice}

\Closesolutionfile{reponses}

%%% Local Variables:
%%% mode: latex
%%% TeX-master: "introduction_programmation_r"
%%% coding: utf-8
%%% End:
